===============================================================================
                    وصف تفصيلي لنظام منصة المرشحين الصحيين
                          Health Candidate Portal
===============================================================================

📋 نظرة عامة على النظام
===============================================================================

منصة المرشحين الصحيين (Health Candidate Portal) هي منصة ويب متخصصة في القطاع 
الصحي بالمملكة العربية السعودية، تهدف إلى ربط الباحثين عن عمل في المجال الطبي 
مع المنشآت الصحية وأصحاب العمل.

الهدف الرئيسي:
- ربط الباحثين عن عمل في القطاع الصحي مع المنشآت الطبية
- تسويق العقارات الطبية
- ربط المستثمرين بالفرص المناسبة
- إدارة العيادات الطبية بكفاءة عالية

🏗️ المعمارية التقنية
===============================================================================

Frontend Architecture:
━━━━━━━━━━━━━━━━━━━━━━
- Framework: React 18 مع TypeScript
- Build Tool: Vite (سرعة عالية في التطوير والبناء)
- Styling: Tailwind CSS (utility-first CSS framework)
- State Management: React Context (للغة والثيم)
- Routing: React Router v6
- Animation: Framer Motion
- Icons: Lucide React

Backend Integration:
━━━━━━━━━━━━━━━━━━━━
- API Client: Axios
- OpenAPI: مولد كود تلقائي للـ APIs
- Authentication: نظام مصادقة متكامل

📱 الصفحات والمكونات التفصيلية
===============================================================================

1. الصفحة الرئيسية (HomePage)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
المسار: /
الغرض: نقطة الوصول الرئيسية للمنصة

المكونات:
- HeroSection: عرض رئيسي جذاب مع دعوة للعمل
- QuickLinks: روابط سريعة للخدمات الأساسية
- StatisticsSection: إحصائيات المنصة (وظائف، عيادات، محترفين)
- NewsSection: أحدث الأخبار والإعلانات

الميزات:
- تصميم متجاوب كامل
- رسوم متحركة سلسة
- دعم RTL للعربية
- إحصائيات متحركة باستخدام CountUp

2. صفحة البحث عن وظائف (JobSearchPage)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
المسار: /jobs
الغرض: البحث والتقديم على الوظائف الطبية

المكونات:
- SearchFilter: فلاتر البحث المتقدمة
- JobCard: بطاقات عرض الوظائف
- Pagination: تصفح النتائج

الميزات:
- بحث بالتخصص والموقع
- فلترة حسب الراتب والخبرة
- عرض تفاصيل الوظائف
- إمكانية التقديم المباشر

3. صفحة توظيف الموظفين (HireStaffPage)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
المسار: /hire
الغرض: للمنشآت الطبية لنشر الوظائف وإدارة التوظيف

الوظائف:
- نشر وظائف جديدة
- إدارة الوظائف الموجودة
- مراجعة الطلبات
- إدارة عملية التوظيف

4. صفحة العيادات الطبية (ClinicsPage)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
المسار: /clinics
الغرض: عرض وإدارة العيادات الطبية

المميزات:
- عرض قائمة العيادات
- البحث بالتخصص والموقع
- تفاصيل العيادات
- نظام الحجز والتقييم

5. صفحة المعلومات الشخصية (PersonalInfoPage)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
المسار: /personal-info
الغرض: إدارة شاملة للمعلومات الشخصية والمهنية

الأقسام الرئيسية:

أ. المعلومات الشخصية الأساسية:
- الاسم الكامل (عربي/إنجليزي)
- البريد الإلكتروني
- رقم الجوال ورمز البلد
- الجنسية والمدينة
- تاريخ الميلاد والجنس
- الحالة الاجتماعية
- رقم الهوية ورقم الجواز

ب. المعلومات المهنية:
- المسمى الوظيفي
- ملخص المهارات (عربي/إنجليزي)
- التفضيلات المهنية
- رفع ملف السيرة الذاتية (PDF)

ج. إدارة التعليم:
- إضافة/حذف/تعديل المؤهلات التعليمية
- المؤسسة التعليمية (عربي/إنجليزي)
- الدرجة العلمية والتخصص
- تاريخ البداية والانتهاء

د. إدارة الخبرات:
- إضافة/حذف/تعديل الخبرات المهنية
- اسم الشركة/المؤسسة
- المنصب والمسؤوليات
- فترة العمل

ه. إدارة المهارات:
- إضافة/حذف/تعديل المهارات
- اسم المهارة ومستوى الإتقان
- سنوات الخبرة لكل مهارة

الميزات التقنية:
- وضع العرض/التعديل المتبادل
- التحقق من صحة البيانات
- رفع الملفات الآمن
- حفظ تلقائي ومعالجة الأخطاء

6. صفحة تسجيل الدخول (LoginPage)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
المسار: /login
الغرض: مصادقة المستخدمين

المميزات:
- نموذج دخول آمن
- خيار "تذكرني"
- استرداد كلمة المرور
- تسجيل دخول اجتماعي (GitHub, Google)

7. صفحة التسجيل (RegisterPage)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
المسار: /register
الغرض: إنشاء حسابات جديدة

المميزات:
- نموذج تسجيل شامل
- التحقق من البيانات
- الموافقة على الشروط والأحكام

8. صفحة اتصل بنا (ContactPage)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
المسار: /contact
الغرض: التواصل مع الدعم والإدارة

المكونات:
- نموذج الاتصال
- معلومات التواصل
- الموقع الجغرافي
- ساعات العمل

🛠️ المكونات القابلة لإعادة الاستخدام
===============================================================================

التنقل والتخطيط:
━━━━━━━━━━━━━━━━━━
- Navbar: شريط التنقل الرئيسي مع القوائم المنسدلة
- Footer: تذييل الموقع مع الروابط المهمة
- Layout: تخطيط عام للصفحات
- LanguageSwitcher: مبدل اللغة العربية/الإنجليزية

المكونات التفاعلية:
━━━━━━━━━━━━━━━━━━━━
- JobCard: بطاقة عرض الوظيفة
- PropertyCard: بطاقة عرض العقارات الطبية
- SearchFilter: مكون البحث والفلترة
- Tabs: نظام التبويب

مكونات العرض:
━━━━━━━━━━━━━━━
- HeroSection: القسم الرئيسي
- StatisticsSection: عرض الإحصائيات
- NewsSection: عرض الأخبار
- QuickLinks: الروابط السريعة

🌐 نظام التدويل (i18n)
===============================================================================

اللغات المدعومة:
━━━━━━━━━━━━━━━━━
- العربية (ar): اللغة الأساسية مع دعم RTL
- الإنجليزية (en): اللغة الثانوية

الميزات:
━━━━━━━━
- تبديل تلقائي لاتجاه النص (RTL/LTR)
- حفظ تفضيل اللغة في localStorage
- ترجمة شاملة لجميع النصوص
- تنسيق التواريخ والأرقام حسب اللغة

ملفات الترجمة:
━━━━━━━━━━━━━━━
src/i18n/locales/
├── ar.json (العربية)
└── en.json (الإنجليزية)

🔌 نظام إدارة البيانات والـ APIs
===============================================================================

هيكل API Client:
━━━━━━━━━━━━━━━━
src/api-client/
├── api.ts (الواجهات والأنواع)
├── base.ts (الكلاسات الأساسية)
├── common.ts (الوظائف المشتركة)
├── configuration.ts (إعدادات API)
└── docs/ (وثائق OpenAPI)

APIs الرئيسية:
━━━━━━━━━━━━━━━

1. PersonalInfo API:
- إنشاء: POST /api/personal-info
- تحديث: PUT /api/personal-info/{id}
- جلب: GET /api/personal-info
- حذف: DELETE /api/personal-info/{id}

2. Education API:
- إدارة المؤهلات التعليمية
- ربط بالمعلومات الشخصية

3. Experience API:
- إدارة الخبرات المهنية
- تواريخ العمل والمسؤوليات

4. Skills API:
- إدارة المهارات ومستويات الإتقان
- سنوات الخبرة لكل مهارة

5. Reference Data APIs:
- Nationalities: الجنسيات
- Cities: المدن
- JobTitles: المسميات الوظيفية
- MaritalStatuses: الحالات الاجتماعية
- Genders: الجنس

DTOs (Data Transfer Objects):
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

CreatePersonalInfoDto:
interface CreatePersonalInfoDto {
  fullNameAr?: string;
  fullNameEn?: string;
  nationalityId?: string;
  idNumber?: string;
  passportNumber?: string;
  passportExpiry?: string;
  birthDate?: string;
  gender?: string;
  maritalStatusId?: string;
  cityId?: string;
  countryCode?: string;
  mobile?: string;
  email?: string;
  jobTitleId?: string;
  summaryAr?: string;
  summaryEn?: string;
  preferencesAr?: string;
  preferencesEn?: string;
  educations?: CreateEducationBriefDto[];
  skills?: CreateSkillsBriefDto[];
  experiences?: CreateExperienceBriefDto[];
}

🔒 إدارة الحالة (State Management)
===============================================================================

Context Providers:
━━━━━━━━━━━━━━━━━

1. LanguageContext:
- إدارة اللغة الحالية
- تبديل الاتجاه (RTL/LTR)
- حفظ التفضيلات

2. ThemeContext:
- إدارة المظهر
- الوضع المظلم/المضيء (مستقبلي)

Local State:
━━━━━━━━━━━
- استخدام useState لحالة المكونات
- useEffect للعمليات الجانبية
- useRef للمراجع DOM

✨ الميزات والوظائف الرئيسية
===============================================================================

🎨 تجربة المستخدم (UX):
━━━━━━━━━━━━━━━━━━━━━━━━
- تصميم متجاوب: يعمل على جميع الأجهزة
- رسوم متحركة: انتقالات سلسة وجذابة
- تحميل سريع: استخدام Vite للأداء العالي
- إمكانية الوصول: دعم قارئات الشاشة

🌍 التدويل:
━━━━━━━━━━━
- دعم RTL كامل: للعربية
- ترجمة شاملة: جميع النصوص مترجمة
- تنسيق محلي: للتواريخ والأرقام

📱 التوافقية:
━━━━━━━━━━━━━
- متصفحات حديثة: Chrome, Firefox, Safari, Edge
- أجهزة متنوعة: Desktop, Tablet, Mobile
- أنظمة تشغيل: Windows, macOS, Linux, iOS, Android

🔐 الأمان:
━━━━━━━━━━
- تشفير البيانات: HTTPS
- التحقق من المدخلات: Validation
- معالجة الأخطاء: Error Handling
- حماية CSRF: Cross-Site Request Forgery

⚡ الأداء:
━━━━━━━━━━
- تحسين الحزم: Code Splitting
- تحميل كسول: Lazy Loading
- ضغط الصور: Image Optimization
- تخزين مؤقت: Caching

🛠️ قابلية الصيانة:
━━━━━━━━━━━━━━━━━━
- كود نظيف: Clean Code Principles
- TypeScript: Type Safety
- مكونات قابلة لإعادة الاستخدام: Reusable Components
- توثيق شامل: Comprehensive Documentation

📊 تدفق البيانات (Data Flow)
===============================================================================

المستخدم → واجهة المستخدم (React Components) → إدارة الحالة 
(State Management) → API Client (Axios + OpenAPI) → Backend Services 
(RESTful APIs) → قاعدة البيانات (Database)

وفي الاتجاه المعاكس:
قاعدة البيانات → Backend Services → API Client → إدارة الحالة 
→ واجهة المستخدم → المستخدم

مكونات إضافية:
- Context Providers (Language, Theme) ← واجهة المستخدم
- Local Storage (Preferences) ← Context Providers

🗂️ هيكل المشروع التفصيلي
===============================================================================

project/
├── public/                    # الملفات العامة
├── src/
│   ├── api-client/           # عميل API مولد تلقائياً
│   │   ├── api.ts           # تعريفات API والواجهات
│   │   ├── base.ts          # الكلاسات الأساسية
│   │   ├── common.ts        # الوظائف المشتركة
│   │   ├── configuration.ts # إعدادات API
│   │   └── docs/            # وثائق OpenAPI
│   ├── components/          # المكونات القابلة لإعادة الاستخدام
│   │   ├── Layout.tsx       # تخطيط عام
│   │   ├── Navbar.tsx       # شريط التنقل
│   │   ├── Footer.tsx       # تذييل الموقع
│   │   ├── HeroSection.tsx  # القسم الرئيسي
│   │   ├── JobCard.tsx      # بطاقة الوظيفة
│   │   └── ...
│   ├── context/             # إدارة الحالة العامة
│   │   ├── LanguageContext.tsx  # سياق اللغة
│   │   └── ThemeContext.tsx     # سياق المظهر
│   ├── i18n/                # نظام التدويل
│   │   ├── index.ts         # إعدادات i18n
│   │   └── locales/         # ملفات الترجمة
│   │       ├── ar.json      # العربية
│   │       └── en.json      # الإنجليزية
│   ├── pages/               # صفحات التطبيق
│   │   ├── HomePage.tsx     # الصفحة الرئيسية
│   │   ├── PersonalInfoPage.tsx  # المعلومات الشخصية
│   │   ├── JobSearchPage.tsx     # البحث عن وظائف
│   │   └── ...
│   ├── App.tsx              # المكون الرئيسي
│   ├── main.tsx             # نقطة الدخول
│   └── index.css            # الأنماط العامة
├── package.json             # تبعيات المشروع
├── vite.config.ts          # إعدادات Vite
├── tailwind.config.js      # إعدادات Tailwind
└── tsconfig.json           # إعدادات TypeScript

🚀 مسار التطوير المستقبلي
===============================================================================

الميزات المخططة:
━━━━━━━━━━━━━━━━━
1. نظام الإشعارات: إشعارات فورية ومخصصة
2. الدردشة المباشرة: تواصل مباشر بين المرشحين وأصحاب العمل
3. التقييمات والمراجعات: نظام تقييم شامل
4. التطبيق الجوال: تطبيق أصلي للهواتف
5. الذكاء الاصطناعي: اقتراحات ذكية للوظائف
6. التحليلات المتقدمة: إحصائيات مفصلة ولوحة تحكم

التحسينات التقنية:
━━━━━━━━━━━━━━━━━━━
1. PWA: تحويل إلى Progressive Web App
2. الوضع المظلم: دعم المظهر المظلم
3. الأداء: تحسينات إضافية للسرعة
4. الأمان: تعزيزات أمنية متقدمة

📋 ملخص النظام
===============================================================================

منصة المرشحين الصحيين هي نظام متكامل ومتطور يوفر:

للباحثين عن عمل:
━━━━━━━━━━━━━━━━━━━
- إنشاء وإدارة السيرة الذاتية الرقمية
- البحث والتقديم على الوظائف
- متابعة حالة الطلبات
- التواصل مع أصحاب العمل

لأصحاب العمل:
━━━━━━━━━━━━━━━━
- نشر الوظائف وإدارتها
- البحث عن المرشحين المناسبين
- مراجعة الطلبات والسير الذاتية
- إدارة عملية التوظيف

للمنصة:
━━━━━━━━━
- إدارة شاملة للمحتوى
- إحصائيات مفصلة
- نظام دعم فني
- إدارة المستخدمين والصلاحيات

النظام مبني بأحدث التقنيات ويوفر تجربة مستخدم ممتازة مع دعم كامل للغة العربية 
والتصميم المتجاوب، مما يجعله الحل الأمثل للقطاع الصحي في المملكة العربية السعودية.

===============================================================================
                              انتهى الوصف التفصيلي
===============================================================================

تاريخ إنشاء الوثيقة: يناير 2025
إصدار النظام: 1.0.0
نوع المشروع: React TypeScript Web Application
التخصص: منصة توظيف للقطاع الصحي

===============================================================================
